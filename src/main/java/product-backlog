Smiles - Remote Controllable OPC UA Player
------------------------------------------

version 0.6.0

TODO
====
- improve accuracy of measurement timing
- document how to use it with an opc ua client (e.g. UA Expert)
- add play backward functionality
- add other data types
- write OPC UA datalogger client that compares output with input file
- change runstate UA variable node into read only
- document input file content and format properly in documentation
- implement "silence gap shortener": if between input records player has to wait more then xx minutes it will shortened to yy seconds
- refactor FileProvider so that data backend controller is cleaned up

DOING
=====
- testing
- cleaning and documenting the code
- bug fixing

DONE
====
- implementing simulator code for fast changing data (up to 10kHz if possible?!) => runs up to 7khz, nu further testing because some project only needed that level
- set max sampling interval in measurement point configuration
- implement hierarchical asset structures: use dotted naming convention for asset name in config file, e.g. part-x,part-y.part-z
- printout version info, arguments and if no arguments the list of supported arguments
- refactored commandline processing inot a seperate class
- bug fixed: endless loop did not recalcuate the timeshift to the current time when looping over the input file
- resetted the values to zero with the right data type at the end of the loop in endless mode
- added the following commandline options: -port, -namespace, -servicename -uri, all for simulating exisitng OPC UA servers
- auto config the start timestamp based on the first timestamp read in the data file
- test if node values can be changed and then are transmitted over OPC UA => yes they are
- read file and play its content through the corresponding OPC UA variable nodes
- create OPC UA player namespace based on assets and measurement point defined in a config file
- add play endless option to OPC UA player interface => this is now hardcoded the default
- refactor MeasurementRecord and ConfigRecord as separate classes instead of inner classes
- add 1 millisecond to measurement timestamp is previous input record for that measurement had same timestamp
- refactored OPC UA node creation in PlayerNameSpace so that the VariableNodeBuilder is used again => failed => not implemented
- parse read data values depending on data type of measurement point
- create proper initial value types (boolean, double) when creating the namespace
- fixed the OPC UA data types of the variable nodes
- update to version 2.1 but still ant-based project instead of maven
- fixed the initial value to null instead of a default value of false and 0.0 for booleans and analog variable nodes
- reset to initial null values when looping at the end of the input data file or when stop command was received
- fix bug with remote control: after stopping you have to execute play - stop - play to get new data
- MIT license file added
- fix bug with value rank and array dimension
- fixed the jar manifest to include the main class file
- added a simulation capability with commandline argument -simulation
- add autostart capability with commandline argument -autostart
- change project to maven project and to current Milo release (from 0.1.5 to 0.2.x and beyond)


Reminders:
==========
commandline: 
java -jar "OPCUA-Controllable-Player.jar" -datafile "some data file" -configfile "some configuration file"
run arguments: -autostart -port 11000 -datafile PlayerDemoData.csv -configfile AssetConfiguration.csv
my play back command line: -datafile "/home/mbuurmei/OPC-UA/OPC UA Remote Controllable Player/PlayerDemoData.csv" -configfile "/home/mbuurmei/OPC-UA/OPC UA Remote Controllable Player/AssetConfiguration.csv"
my simulation command line (including autostart): -simulation -autostart

Build jar file with dependencies => run maven goals: "clean compile assembly:single"
  Resulting jar can be found in project target directory

18:12:42.554 [milo-shared-thread-pool-4] DEBUG org.eclipse.milo.opcua.sdk.server.namespaces.OpcUaNamespace - Read value DataType from attribute NodeClass of NodeId{ns=0, id=24}
18:12:42.560 [milo-shared-thread-pool-4] DEBUG name.buurmeijermile.opcuaservices.controllableplayer.server.PlayerNamespace - Read value LocalizedText{text=remote-control(x), locale=null} from attribute DisplayName of NodeId{ns=2, id=NodeId{ns=2, id=Player-Control}/remote-control(x)}
18:12:42.561 [milo-shared-thread-pool-4] DEBUG name.buurmeijermile.opcuaservices.controllableplayer.server.PlayerNamespace - Read value LocalizedText{text=Player-Control, locale=en} from attribute DisplayName of NodeId{ns=2, id=Player-Control}
18:12:42.561 [milo-shared-thread-pool-4] DEBUG name.buurmeijermile.opcuaservices.controllableplayer.server.PlayerNamespace - Read value LocalizedText{text=Remote controle for this player: input '1' => Play, '5' => Pause, '6' => Stop, '7' => Endlessly loop input file, locale=en} from attribute Description of NodeId{ns=2, id=NodeId{ns=2, id=Player-Control}/remote-control(x)}